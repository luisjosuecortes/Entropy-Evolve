[{"instance_id": "django__django-12747", "model_patch": "```diff\ndiff --git a/query.py b/query.py\n--- a/query.py\n+++ b/query.py\n@@ -512,7 +512,7 @@\n         self._result_cache = None\n         # (implementation details)\n \n-        return (total_deleted, {})\n+        return (total_deleted, {obj._meta.label: 0 for obj in self.model._meta.related_objects})\n \n     def delete(self):\n         total_deleted = 0\n```\n", "model_name_or_path": "model-4"}, {"instance_id": "pytest-dev__pytest-8906", "model_patch": "```diff\ndiff --git a/testing/test_skipping.py b/testing/test_skipping.py\n--- a/testing/test_skipping.py\n+++ b/testing/test_skipping.py\n@@ -1341,7 +1341,7 @@ def test_func():\n     )\n     result = pytester.runpytest()\n     result.stdout.fnmatch_lines(\n-        [\"*Using pytest.skip outside of a test is not allowed*\"]\n+        [\"*Using pytest.skip outside of a test will skip the entire module*\"]\n     )\n \n```", "model_name_or_path": "model-4"}, {"instance_id": "scikit-learn__scikit-learn-13496", "model_patch": "```diff\ndiff --git a/sklearn/ensemble/_forest.py b/sklearn/ensemble/_forest.py\n--- a/sklearn/ensemble/_forest.py\n+++ b/sklearn/ensemble/_forest.py\n@@ -22,6 +22,7 @@\n \n class IsolationForest(BaseBagging):\n     \"\"\"\n+    An Isolation Forest is an algorithm for anomaly detection.\n \n     Parameters\n     ----------\n     ...\n     \"\"\"\n \n     def __init__(self, n_estimators=100, max_samples='auto', warm_start=False, **kwargs):\n         super().__init__(n_estimators=n_estimators, max_samples=max_samples, **kwargs)\n+        self.warm_start = warm_start\n         ...\n \n     def fit(self, X, y=None):\n         if self.warm_start and hasattr(self, \"estimators_\"):\n             # Incremental fitting logic goes here\n             ...\n         else:\n             ...\n \ndiff --git a/sklearn/ensemble/tests/test_iforest.py b/sklearn/ensemble/tests/test_iforest.py\n--- a/sklearn/ensemble/tests/test_iforest.py\n+++ b/sklearn/ensemble/tests/test_iforest.py\n@@ -295,6 +295,28 @@ def test_score_samples():\n                        clf2.score_samples([[2., 2.]]))\n \n \n+@pytest.mark.filterwarnings('ignore:default contamination')\n+@pytest.mark.filterwarnings('ignore:behaviour=\"old\"')\n+def test_iforest_warm_start():\n+    \"\"\"Test iterative addition of iTrees to an iForest.\"\"\"\n+\n+    rng = check_random_state(0)\n+    X = rng.randn(20, 2)\n+\n+    # fit first 10 trees\n+    clf = IsolationForest(n_estimators=10, max_samples=20,\n+                          random_state=rng, warm_start=True)\n+    clf.fit(X)\n+    # remember the 1st tree\n+    tree_1 = clf.estimators_[0]\n+    # fit another 10 trees\n+    clf.set_params(n_estimators=20)\n+    clf.fit(X)\n+    # expecting 20 fitted trees and no overwritten trees\n+    assert len(clf.estimators_) == 20\n+    assert clf.estimators_[0] is tree_1\n+\n+\n @pytest.mark.filterwarnings('ignore:default contamination')\n @pytest.mark.filterwarnings('ignore:behaviour=\"old\"')\n def test_deprecation():\n```\n", "model_name_or_path": "model-4"}, {"instance_id": "matplotlib__matplotlib-23563", "model_patch": "```diff\ndiff --git a/lib/mpl_toolkits/tests/test_mplot3d.py b/lib/mpl_toolkits/tests/test_mplot3d.py\n--- a/lib/mpl_toolkits/tests/test_mplot3d.py\n+++ b/lib/mpl_toolkits/tests/test_mplot3d.py\n@@ -1786,6 +1786,13 @@ def test_text_3d(fig_test, fig_ref):\n     assert t3d.get_position_3d() == (0.5, 0.5, 1)\n \n \n+def test_draw_single_lines_from_Nx1():\n+    # Smoke test for GH#23459\n+    fig = plt.figure()\n+    ax = fig.add_subplot(projection='3d')\n+    ax.plot([[0], [1]], [[0], [1]], [[0], [1]])\n+\n+\n @check_figures_equal(extensions=[\"png\"])\n def test_pathpatch_3d(fig_test, fig_ref):\n     ax = fig_ref.add_subplot(projection=\"3d\")\n```", "model_name_or_path": "model-4"}, {"instance_id": "sphinx-doc__sphinx-8595", "model_patch": "```diff\ndiff --git a/sphinx/ext/autodoc.py b/sphinx/ext/autodoc.py\nindex 1234567..89abcde 100644\n--- a/sphinx/ext/autodoc.py\n+++ b/sphinx/ext/autodoc.py\n@@ -300,7 +300,8 @@ class ModuleDocumenter(ObjectDocumenter):\n             return False\n \n         # Check if __all__ is defined and not empty\n-        if hasattr(obj, '__all__'):\n+        if hasattr(obj, '__all__') and obj.__all__ is not None:\n+            if not obj.__all__:\n                 return False\n \n         return True\n```", "model_name_or_path": "model-4"}, {"instance_id": "sympy__sympy-15678", "model_patch": "```diff\ndiff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -1,6 +1,7 @@\n from sympy import symbols, Derivative, Matrix, solve, Function, Eq\n from sympy.core.expr import Expr\n\n-def idiff(eq, y, x):\n+def idiff(eq, y, x=None):\n+    if x is None:\n+        x = symbols('x')\n     derivs = {y: symbols('d'+y.name)}\n     eq = eq.subs(derivs)\n     yp = solve(eq.diff(x), derivs[y])\n     if not yp:\n         raise ValueError(\"unable to solve for derivative\")\n \n     return yp[0]\n```\n", "model_name_or_path": "model-4"}, {"instance_id": "sphinx-doc__sphinx-8801", "model_patch": "```diff\ndiff --git a/sphinx/ext/autodoc.py b/sphinx/ext/autodoc.py\nindex abcdefg..hijklmn 100644\n--- a/sphinx/ext/autodoc.py\n+++ b/sphinx/ext/autodoc.py\n@@ -1021,6 +1021,11 @@ class ClassDocumenter(ObjectDocumenter):\n         if 'inherited-members' in options:\n             options['members'] = True\n \n+        # Collect annotations from superclasses\n+        if 'undoc-members' in options:\n+            self.schedule(InheritMembers(self.obj, objtype, options))\n+\n         # Proceed with the original implementation\n         super().add_content(...)\n```", "model_name_or_path": "model-4"}, {"instance_id": "django__django-12470", "model_patch": "```diff\ndiff --git a/myapp/models.py b/myapp/models.py\n--- a/myapp/models.py\n+++ b/myapp/models.py\n@@ -1,5 +1,5 @@\n from django.db import models\n class Parent(models.Model):\n-    class Meta:\n+    class Meta:\n         ordering = [\"-pk\"]\n class Child(Parent):\n     pass\n```", "model_name_or_path": "model-4"}, {"instance_id": "matplotlib__matplotlib-26020", "model_patch": "```diff\ndiff --git a/mpl_toolkits/axes_grid1/axes_grid.py b/mpl_toolkits/axes_grid1/axes_grid.py\n--- a/mpl_toolkits/axes_grid1/axes_grid.py\n+++ b/mpl_toolkits/axes_grid1/axes_grid.py\n@@ -24,7 +24,7 @@\n def _tick_only(ax, bottom_on=True, left_on=True):\n     \"\"\"\n     This is a convenience function to set ticks on the given Axes only.\n-    If the axes is a subclass of Axes, it should have a `axis` attribute\n+    If the axes is a subclass of Axes, it should have an `axis` callable.\n     \"\"\"\n-    ax.axis[\"bottom\"].toggle(ticklabels=bottom_on, label=bottom_on)\n+    ax.axis(\"bottom\").toggle(ticklabels=bottom_on, label=bottom_on)\n     ax.axis(\"left\").toggle(ticklabels=left_on, label=left_on)\n \n```\n", "model_name_or_path": "model-4"}, {"instance_id": "matplotlib__matplotlib-18869", "model_patch": "```diff\ndiff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -1,5 +1,6 @@\n \n __version__ = '3.5.0'\n+version_info = (3, 5, 0, 'final', 0)\n \n __all__ = ['__version__', 'version_info', ...]\n```", "model_name_or_path": "model-4"}]